    def generate_predictions(self,
                             loader: DataLoader,
                             device: str,
                             save_path: Optional[str]) -> BrainyPredictions:
        """
        Generates projection embeddings and save them.
        :param save_path: A path to the file to save the predictions.
        :param loader: Data loader.
        :param device: Device
        :return: BrainyPredictions object.
        """
        self.eval()

        predictions: BrainyPredictions = BrainyPredictions()

        with torch.no_grad():
            for batch_idx, (brain_data, images, labels, img_idx, participants) in enumerate(loader):
                brain_data, images, labels = brain_data.to(device), images.to(device), labels.to(
                    device)

                brain_embeddings = self.encode_brain(brain_data)
                image_embeddings = self.encode_image(images)

                brainy_predictions, true_labels = get_brainy_predictions(
                    brain_embeddings=brain_embeddings,
                    image_embeddings=image_embeddings,
                    labels=labels,
                    top_k=1)

                predictions.fill(
                    target=true_labels,
                    preds_brainy=brainy_predictions,
                    preds_image=self.image_model_frozen(images).tolist(),
                    preds_brain=self.brain_model_frozen(brain_data).tolist(),
                    image_idx=img_idx.tolist(),
                    participant=participants.tolist()
                )

        predictions.save(file_path=save_path)

        return predictions
